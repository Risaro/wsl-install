#!/usr/bin/env python3

import os
import sys
import subprocess
import re
import platform
import getpass
from pathlib import Path

def run(cmd, sudo=False, shell=False, check=True, env=None):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã"""
    if sudo and not cmd.startswith("sudo "):
        cmd = f"sudo {cmd}"
    try:
        result = subprocess.run(
            cmd,
            shell=shell,
            check=check,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
            encoding='utf-8',
            env=env or os.environ
        )
        return result
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {cmd}")
        print(f"   –ö–æ–¥: {e.returncode}")
        print(f"   –û—à–∏–±–∫–∞: {e.stderr.strip()}")
        sys.exit(1)

def detect_gpu():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø GPU (–≤ WSL –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ dxdiag –≤ Windows, –Ω–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ lspci)"""
    print("üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø GPU...")
    result = run("lspci -v", shell=True, check=False)
    if result.returncode != 0:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å lspci. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CPU OpenCL...")
        return "unknown"

    output = result.stdout.lower()
    if "nvidia" in output:
        return "nvidia"
    elif "amd" in output or "radeon" in output or "advanced micro devices" in output:
        return "amd"
    elif "intel" in output:
        return "intel"
    else:
        return "unknown"

def setup_wsl_conf(username):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ /etc/wsl.conf"""
    print("‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º /etc/wsl.conf...")
    wsl_conf = '''[automount]
enabled=true

[user]
default={}

[boot]
command = "service dbus start"
'''.format(username)

    conf_path = "/tmp/wsl.conf"
    Path(conf_path).write_text(wsl_conf, encoding='utf-8')

    run(f"sudo cp {conf_path} /etc/wsl.conf")
    print("‚úÖ /etc/wsl.conf –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

def install_gui(username):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ XFCE –∏ xRDP"""
    print("üé® –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º XFCE –∏ xRDP...")
    run("sudo apt update -qq")
    run("sudo apt install -y xfce4 xfce4-goodies xrdp dbus-x11")

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .xsession
    session_file = f"/home/{username}/.xsession"
    run(f"echo 'xfce4-session' | sudo tee {session_file}")
    run(f"sudo chown {username}:{username} {session_file}")

    # –ó–∞–ø—É—Å–∫ xRDP
    run("sudo service xrdp start")
    run("sudo systemctl enable xrdp", check=False)

    print("‚úÖ GUI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def install_tools():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    print("üõ†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º htop, nano, git, curl...")
    run("sudo apt install -y htop nano wget curl git software-properties-common")
    print("‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def install_nvidia():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ CUDA –¥–ª—è WSL"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CUDA –¥–ª—è NVIDIA...")
    run("wget -q https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin")
    run("sudo mv cuda-wsl-ubuntu.pin /etc/apt/sources.list.d/cuda-pin.list")
    run("sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/3bf863cc.pub")
    run('sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/ /" -y')
    run("sudo apt update")
    run("sudo apt install -y cuda-toolkit-12-4")
    run("nvidia-smi")
    print("‚úÖ CUDA —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def install_amd():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ROCm"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ROCm –¥–ª—è AMD...")
    run("sudo apt install -y wget gnupg2")
    run("wget -q -O - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -")
    run('echo "deb [arch=amd64] https://repo.radeon.com/rocm/apt/5.7 jammy main" | sudo tee /etc/apt/sources.list.d/rocm.list')
    run("sudo apt update")
    run("sudo apt install -y rocm-opencl-runtime rocm-utils")
    run(f"sudo usermod -aG render {getpass.getuser()}")
    print("‚úÖ ROCm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def install_intel():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ Intel"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä—ã Intel...")
    run("sudo apt install -y intel-level-zero-gpu intel-opencl-icd")
    print("‚úÖ –î—Ä–∞–π–≤–µ—Ä—ã Intel —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def install_cpu_opencl():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCL –¥–ª—è CPU"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º OpenCL –¥–ª—è CPU...")
    run("sudo apt install -y ocl-icd-opencl-dev pocl-opencl-icd")
    print("‚úÖ CPU OpenCL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    if os.geteuid() != 0:
        print("‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root (—á–µ—Ä–µ–∑ sudo)")
        sys.exit(1)

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–∑ PowerShell)
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: sudo python3 setup-wsl.py <username>")
        sys.exit(1)

    username = sys.argv[1]
    print(f"üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    result = run(f"id -u {username}", check=False)
    if result.returncode != 0:
        print(f"üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        sys.exit(1)

    # –í—ã–ø–æ–ª–Ω—è–µ–º —à–∞–≥–∏
    setup_wsl_conf(username)
    install_gui(username)
    install_tools()

    gpu = detect_gpu()
    print(f"üéÆ GPU: {gpu.upper()}")

    if gpu == "nvidia":
        install_nvidia()
    elif gpu == "amd":
        install_amd()
    elif gpu == "intel":
        install_intel()
    else:
        install_cpu_opencl()

    # –§–∏–Ω–∞–ª
    ip = run("hostname -I | awk '{print $1}'", shell=True).stdout.strip()
    print("\n" + "="*50)
    print("‚úÖ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"üñ•Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
    print(f"üåê IP-–∞–¥—Ä–µ—Å: {ip}")
    print(f"üí° –ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –ø–æ RDP –∫ {ip}:3389")
    print("   –õ–æ–≥–∏–Ω: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –æ—Ç WSL")
    print("="*50)

if __name__ == "__main__":
    main()
